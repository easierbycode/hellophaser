{"version":3,"sources":["js/Scene1.ts","js/beam.ts","js/game-settings.ts","js/explosion.ts","js/Scene2.ts","js/config.ts","js/index.ts"],"names":[],"mappings":"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","file":"js.6cf86987.js","sourceRoot":"../src","sourcesContent":["export class Scene1 extends Phaser.Scene {\n    constructor() {\n        super('bootGame');  // bootGame will be the identifier for this scene\n    }\n\n    preload() {\n        // this.load.image('background', './assets/images/background.png');\n        this.load.image('background', require('../assets/images/background.png'));\n\n        this.load.spritesheet('ship', require('../assets/spritesheets/ship.png'), {\n            frameWidth: 16,\n            frameHeight: 16\n        });\n        this.load.spritesheet('ship2', require('../assets/spritesheets/ship2.png'), {\n            frameWidth: 32,\n            frameHeight: 16\n        });\n        this.load.spritesheet('ship3', require('../assets/spritesheets/ship3.png'), {\n            frameWidth: 32,\n            frameHeight: 32\n        });\n        this.load.spritesheet('explosion', require('../assets/spritesheets/explosion.png'), {\n            frameWidth: 16,\n            frameHeight: 16\n        });\n        this.load.spritesheet('power-up', require('../assets/spritesheets/power-up.png'), {\n            frameWidth: 16,\n            frameHeight: 16\n        });\n        this.load.spritesheet('player', require('../assets/spritesheets/player.png'), {\n            frameWidth: 16,\n            frameHeight: 24\n        });\n        this.load.spritesheet('beam', require('../assets/spritesheets/beam.png'), {\n            frameWidth: 16,\n            frameHeight: 16\n        });\n\n        this.load.bitmapFont('pixelFont', require('../assets/font/font.png'), require('../assets/font/font.xml'));\n\n        this.load.audio('audio_beam', [require('../assets/sounds/beam.ogg'), require('../assets/sounds/beam.mp3')]);\n        this.load.audio('audio_explosion', [require('../assets/sounds/explosion.ogg'), require('../assets/sounds/explosion.mp3')]);\n        this.load.audio('audio_pickup', [require('../assets/sounds/pickup.ogg'), require('../assets/sounds/pickup.mp3')]);\n        this.load.audio('music', [require('../assets/sounds/sci-fi_platformer12.ogg'), require('../assets/sounds/sci-fi_platformer12.ogg')]);\n    }\n\n    create() {\n        this.add.text(20, 20, 'Loading game...');\n        this.scene.start('playGame');\n\n        this.anims.create({\n            key: 'ship1_anim',  // ID for this animation\n            frames: this.anims.generateFrameNumbers('ship'),  // array of frames\n            frameRate: 20,  // animation speed - frames per second\n            repeat: -1  // will it loop?  -1 for infinite\n        });\n\n        this.anims.create({\n            key: 'ship2_anim',\n            frames: this.anims.generateFrameNumbers('ship2'),\n            frameRate: 20,\n            repeat: -1\n        });\n\n        this.anims.create({\n            key: 'ship3_anim',\n            frames: this.anims.generateFrameNumbers('ship3'),\n            frameRate: 20,\n            repeat: -1\n        });\n\n        this.anims.create({\n            key: 'explode',\n            frames: this.anims.generateFrameNumbers('explosion'),\n            frameRate: 20,\n            repeat: 0,\n            hideOnComplete: true\n        });\n\n        this.anims.create({\n            key: 'red',\n            frames: this.anims.generateFrameNumbers('power-up', {\n                start: 0,\n                end: 1\n            }),\n            frameRate: 20,\n            repeat: -1\n        });\n\n        this.anims.create({\n            key: 'gray',\n            frames: this.anims.generateFrameNumbers('power-up', {\n                start: 2,\n                end: 3\n            }),\n            frameRate: 20,\n            repeat: -1\n        });\n\n        this.anims.create({\n            key: 'thrust',\n            frames: this.anims.generateFrameNumbers('player'),\n            frameRate: 20,\n            repeat: -1\n        });\n\n        this.anims.create({\n            key: 'beam_anim',\n            frames: this.anims.generateFrameNumbers('beam'),\n            frameRate: 20,\n            repeat: -1\n        });\n    }\n}","\nexport class Beam extends Phaser.GameObjects.Sprite {\n    constructor(scene) {\n        let {x, y} = scene.player;\n        y -= 16;\n        super(scene, x, y, 'beam');\n        scene.add.existing(this);\n        this.play('beam_anim');\n        scene.physics.world.enableBody(this);\n        this.body.velocity.y = -250;\n        scene.projectiles.add(this);\n    }\n\n    update() {\n        if (this.y < 32) {\n            this.destroy();\n        }\n    }\n}","\nexport var gameSettings = {\n    playerSpeed: 200\n};","\nexport class Explosion extends Phaser.GameObjects.Sprite {\n    constructor(scene, x, y) {\n        super(scene, x, y, 'explosion');\n        scene.add.existing(this);\n        this.play('explode');\n    }\n}","import {Beam} from './beam.ts';\nimport {config} from './config.ts';\nimport {gameSettings} from './game-settings.ts';\nimport {Explosion} from './explosion.ts'\n\n\nexport class Scene2 extends Phaser.Scene {\n    constructor() {\n        super('playGame'); \n    }\n\n    // //  used to prepare data\n    // init() {\n\n    // }\n\n    // // load music and images into memory\n    // preload() {\n\n    // }\n\n    // add objects to the game\n    create() {\n        window.addEventListener('resize', this.resize.bind(this));\n        this.resize();\n\n        this.background = this.add.tileSprite(0, 0, config.width, config.height, 'background');\n        this.background.setOrigin(0, 0);\n\n        const graphics = this.add.graphics();\n        graphics.fillStyle(0x000000, 1);\n        graphics.beginPath();\n        graphics.moveTo(0, 0);\n        graphics.lineTo(config.width, 0);\n        graphics.lineTo(config.width, 20);\n        graphics.lineTo(0, 20);\n        graphics.lineTo(0, 0);\n        graphics.closePath();\n        graphics.fillPath();\n        \n        this.score = 0;\n        this.scoreLabel = this.add.bitmapText(10, 5, 'pixelFont', 'SCORE ', 16);\n\n        this.beamSound = this.sound.add('audio_beam');\n        this.explosionSound = this.sound.add('audio_explosion');\n        this.pickupSound = this.sound.add('audio_pickup');\n\n        this.music = this.sound.add('music');\n\n        var musicConfig = {\n            mute: false,\n            volume: 1,\n            rate: 1,\n            detune: 0,\n            seek: 0,\n            loop: false,\n            delay: 0\n        };\n\n        this.music.play(musicConfig);\n\n        this.ship1 = this.add.sprite(config.width/2 - 50, config.height/2, 'ship');\n        this.ship2 = this.add.sprite(config.width/2, config.height/2, 'ship2');\n        this.ship3 = this.add.sprite(config.width/2 + 50, config.height/2, 'ship3');\n\n        this.enemies = this.physics.add.group();\n        this.enemies.add(this.ship1);\n        this.enemies.add(this.ship2);\n        this.enemies.add(this.ship3);\n\n        this.ship1.play('ship1_anim');\n        this.ship2.play('ship2_anim');\n        this.ship3.play('ship3_anim');\n\n        this.powerUps = this.physics.add.group();\n\n        var maxObjects = 4;\n\n        for (var i = 0; i < maxObjects; i++) {\n            var powerUp = this.physics.add.sprite(16, 16, 'power-up');\n            this.powerUps.add(powerUp);\n            powerUp.setRandomPosition(0, 0, this.game.config.width, this.game.config.height);\n\n            if (Math.random() > 0.5) {\n                powerUp.play('red');\n            } else {\n                powerUp.play('gray');\n            }\n\n            powerUp.setVelocity(100, 100);\n            powerUp.setCollideWorldBounds(true);\n            powerUp.setBounce(1);\n        }\n\n        this.player = this.physics.add.sprite(config.width / 2 - 8, config.height - 64, 'player');\n        this.player.play('thrust');\n        this.cursorKeys = this.input.keyboard.createCursorKeys();\n        this.player.setCollideWorldBounds(true);\n\n        this.spacebar = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE);\n\n        // group to hold all our projectiles\n        this.projectiles = this.add.group();\n\n        this.physics.add.collider(this.projectiles, this.powerUps, (projectile, powerUp) => {\n            projectile.destroy();\n        });\n\n        this.physics.add.overlap(this.player, this.powerUps, this.pickPowerUp, null, this);\n\n        this.physics.add.overlap(this.player, this.enemies, this.hurtPlayer, null, this);\n\n        this.physics.add.overlap(this.projectiles, this.enemies, this.hitEnemy, null, this);\n    }\n\n    // //  loop which runs continuously\n    update() {\n        this.moveShip(this.ship1, 1);\n        this.moveShip(this.ship2, 2);\n        this.moveShip(this.ship3, 3);\n\n        this.background.tilePositionY -= 0.5;\n\n        this.movePlayerManager();\n\n        if (Phaser.Input.Keyboard.JustDown(this.spacebar)) {\n            if (this.player.active) {\n                this.shootBeam();\n            }\n        }\n        for (var i = 0; i < this.projectiles.getChildren().length; i++) {\n            var beam = this.projectiles.getChildren()[i];\n            beam.update();\n        }\n    }\n\n    zeroPad(number, size) {\n        var stringNumber = String(number);\n        while (stringNumber.length < (size || 2)) {\n            stringNumber = `0${stringNumber}`;\n        }\n        return stringNumber;\n    }\n    \n    hitEnemy(projectile, enemy) {\n        var explosion = new Explosion(this, enemy.x, enemy.y);\n\n        projectile.destroy();\n        this.resetShipPos(enemy);\n        this.score += 15;\n        var scoreFormatted = this.zeroPad(this.score, 6);\n        this.scoreLabel.text = `SCORE ${scoreFormatted}`;\n\n        this.explosionSound.play();\n    }\n\n    hurtPlayer(player, enemy) {\n        this.resetShipPos(enemy);\n\n        if (this.player.alpha < 1)  return;\n\n        var explosion = new Explosion(this, player.x, player.y);\n\n        player.disableBody(true, true);\n\n        // this.resetPlayer();\n        this.time.addEvent({\n            delay: 1000,\n            callback: this.resetPlayer,\n            callbackScope: this,\n            loop: false\n        });\n    }\n\n    resetPlayer() {\n        var x = config.width / 2 - 8;\n        var y = config.height + 64;\n        this.player.enableBody(true, x, y, true, true);\n\n        this.player.alpha = 0.5;\n\n        var tween = this.tweens.add({\n            targets: this.player,\n            y: config.height - 64,\n            ease: 'Power1',\n            duration: 1500,\n            repeat: 0,\n            onComplete: function() {\n                this.player.alpha = 1;\n            },\n            callbackScope: this\n        });\n    }\n\n    pickPowerUp(player, powerUp) {\n        powerUp.disableBody(true, true);\n        this.pickupSound.play();\n    }\n\n    shootBeam() {\n        var beam = new Beam(this);\n        this.beamSound.play();\n    }\n    \n    movePlayerManager() {\n        this.player.setVelocity(0);\n\n        if (this.cursorKeys.left.isDown) {\n            this.player.setVelocityX(-gameSettings.playerSpeed);\n        } else if (this.cursorKeys.right.isDown) {\n            this.player.setVelocityX(gameSettings.playerSpeed);\n        }\n\n        if (this.cursorKeys.up.isDown) {\n            this.player.setVelocityY(-gameSettings.playerSpeed);\n        } else if (this.cursorKeys.down.isDown) {\n            this.player.setVelocityY(gameSettings.playerSpeed);\n        }\n    }\n\n    moveShip(ship, speed) {\n        ship.y += speed;\n        if (ship.y > config.height) {\n            this.resetShipPos(ship);\n        }\n    }\n\n    resetShipPos(ship) {\n        ship.y = 0;\n        var randomX = Phaser.Math.Between(0, config.width);\n        ship.x = randomX;\n    }\n\n    // Source @robmuh  on html5gamedevs.com\n    // http://www.html5gamedevs.com/topic/36607-scaling-the-canvas-for-pixel-art/?do=findComment&comment=209927\n    resize() {\n        var canvas = this.game.canvas, width = window.innerWidth, height = window.innerHeight;\n        var wratio = width / height, ratio = canvas.width / canvas.height;\n\n        if (wratio < ratio) {\n            canvas.style.width = width + \"px\";\n            canvas.style.height = (width / ratio) + \"px\";\n        } else {\n            canvas.style.width = (height * ratio) + \"px\";\n            canvas.style.height = height + \"px\";\n        }\n    }\n}","import {Scene1} from './Scene1.ts';\nimport {Scene2} from './Scene2.ts';\n\n\nexport var config = {\n    width: 256,\n    height: 272,\n    scene: [Scene1, Scene2],\n    pixelArt: true,\n    scale: {\n        mode: Phaser.Scale.FIT,\n        autoCenter: Phaser.Scale.CENTER_BOTH\n    },\n    physics: {\n        default: 'arcade',\n        arcade: {\n            debug: false\n        }\n    }\n};","import {config} from './config.ts';\n\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nvar game;\n\nvar app = {\n    // Application Constructor\n    initialize: function() {\n        document.addEventListener('deviceready', this.onDeviceReady.bind(this), false);\n    },\n\n    // deviceready Event Handler\n    //\n    // Bind any cordova events here. Common events are:\n    // 'pause', 'resume', etc.\n    onDeviceReady: function() {\n        this.receivedEvent('deviceready');\n        game = new Phaser.Game(config);\n    },\n\n    // Update DOM on a Received Event\n    receivedEvent: function(id) {\n        // var parentElement = document.getElementById(id);\n        // var listeningElement = parentElement.querySelector('.listening');\n        // var receivedElement = parentElement.querySelector('.received');\n\n        // listeningElement.setAttribute('style', 'display:none;');\n        // receivedElement.setAttribute('style', 'display:block;');\n\n        var rootElement = document.querySelector('.app');\n        rootElement.setAttribute('style', 'display:none;');\n\n        console.log('Received Event: ' + id);\n    }\n};\n\napp.initialize();\n\n\nif (!window.cordova) {\n    setTimeout(() => {\n        const e = document.createEvent('Events')\n        e.initEvent('deviceready', true, false);\n        document.dispatchEvent(e);\n    }, 50);\n}"]}